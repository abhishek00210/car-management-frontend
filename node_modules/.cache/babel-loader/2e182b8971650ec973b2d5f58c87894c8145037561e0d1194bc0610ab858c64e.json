{"ast":null,"code":"var _jsxFileName = \"/Users/saintlucifer/Desktop/Projects/sypne/car-management-system/frontend/src/components/Cars/CarForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport api from '../../services/api';\nimport './Cars.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [tags, setTags] = useState('');\n  const [images, setImages] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      fetchCar();\n    }\n  }, [id]);\n  const fetchCar = async () => {\n    try {\n      const response = await api.get(`/cars/${id}`);\n      const car = response.data;\n      setTitle(car.title);\n      setDescription(car.description);\n      setTags(car.tags.join(', ')); // If your tags are in an array, convert them to a string.\n    } catch (error) {\n      console.error('Error fetching car:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    try {\n      // Convert images to Base64\n      const base64Images = await Promise.all(images.map(image => {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.readAsDataURL(image);\n          reader.onload = () => resolve(reader.result);\n          reader.onerror = error => reject(error);\n        });\n      }));\n\n      // Construct the JSON payload\n      const payload = {\n        title,\n        description,\n        tags: tags.split(',').map(tag => tag.trim()),\n        // Convert tags to an array\n        images: base64Images // Include base64 images in the payload\n      };\n      console.log('Payload before submission:', payload);\n\n      // Make the API request\n      let response;\n      if (id && id.trim()) {\n        response = await api.patch(`/cars/${id}`, payload, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      } else {\n        response = await api.post('/cars', payload, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n      console.log('Server response:', response.data);\n      navigate('/');\n    } catch (error) {\n      console.error('Error saving car:', error.response ? error.response.data : error.message);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: id ? 'Edit Car' : 'Add New Car'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"tags\",\n            children: \"Tags (comma-separated)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"tags\",\n            type: \"text\",\n            value: tags,\n            onChange: e => setTags(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"images\",\n            children: \"Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"images\",\n            type: \"file\",\n            multiple: true,\n            onChange: e => setImages(Array.from(e.target.files))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: \"button\",\n          style: {\n            width: '100%'\n          },\n          children: isSubmitting ? 'Submitting...' : id ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(CarForm, \"Odle0SdZUjhiw07hWvwfIgbQd8k=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CarForm;\nexport default CarForm;\nvar _c;\n$RefreshReg$(_c, \"CarForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","api","jsxDEV","_jsxDEV","CarForm","_s","title","setTitle","description","setDescription","tags","setTags","images","setImages","isSubmitting","setIsSubmitting","navigate","id","fetchCar","response","get","car","data","join","error","console","handleSubmit","e","preventDefault","base64Images","Promise","all","map","image","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","payload","split","tag","trim","log","patch","headers","post","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","multiple","Array","from","files","disabled","style","width","_c","$RefreshReg$"],"sources":["/Users/saintlucifer/Desktop/Projects/sypne/car-management-system/frontend/src/components/Cars/CarForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport api from '../../services/api';\nimport './Cars.css';\n\nconst CarForm = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [tags, setTags] = useState('');\n  const [images, setImages] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      fetchCar();\n    }\n  }, [id]);\n\n  const fetchCar = async () => {\n    try {\n      const response = await api.get(`/cars/${id}`);\n      const car = response.data;\n      setTitle(car.title);\n      setDescription(car.description);\n      setTags(car.tags.join(', ')); // If your tags are in an array, convert them to a string.\n    } catch (error) {\n      console.error('Error fetching car:', error);\n    }\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n  \n    try {\n      // Convert images to Base64\n      const base64Images = await Promise.all(\n        images.map((image) => {\n          return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(image);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n          });\n        })\n      );\n  \n      // Construct the JSON payload\n      const payload = {\n        title,\n        description,\n        tags: tags.split(',').map((tag) => tag.trim()), // Convert tags to an array\n        images: base64Images, // Include base64 images in the payload\n      };\n  \n      console.log('Payload before submission:', payload);\n  \n      // Make the API request\n      let response;\n      if (id && id.trim()) {\n        response = await api.patch(`/cars/${id}`, payload, {\n          headers: { 'Content-Type': 'application/json' },\n        });\n      } else {\n        response = await api.post('/cars', payload, {\n          headers: { 'Content-Type': 'application/json' },\n        });\n      }\n  \n      console.log('Server response:', response.data);\n      navigate('/');\n    } catch (error) {\n      console.error('Error saving car:', error.response ? error.response.data : error.message);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <h2 className=\"title\">{id ? 'Edit Car' : 'Add New Car'}</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              id=\"title\"\n              type=\"text\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"tags\">Tags (comma-separated)</label>\n            <input\n              id=\"tags\"\n              type=\"text\"\n              value={tags}\n              onChange={(e) => setTags(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"images\">Images</label>\n            <input\n              id=\"images\"\n              type=\"file\"\n              multiple\n              onChange={(e) => setImages(Array.from(e.target.files))}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className=\"button\"\n            style={{ width: '100%' }}\n          >\n            {isSubmitting ? 'Submitting...' : (id ? 'Update' : 'Create')}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default CarForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}